version: '3.8'

services:
  web:
    build: .
    command: >
      sh -c "python manage.py collectstatic --noinput &&
             python manage.py migrate &&
             gunicorn config.wsgi:application --bind 0.0.0.0:8000"
    volumes:
      - .:/app
      - static_volume:/app/staticfiles
      - media_volume:/app/media
    expose:
      - 8000
    env_file:
      - .env
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_started

  nginx:
    image: nginx:1.25
    volumes:
      - static_volume:/app/staticfiles
      - media_volume:/app/media
      - ./nginx/nginx.conf:/etc/nginx/conf.d/default.conf
    ports:
      - "8000:80"
    depends_on:
      - web

  db:
    image: postgres:14
    volumes:
      - postgres_data:/var/lib/postgresql/data/
    env_file:
      - .env
    ports:
      - "15432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 5s
      retries: 5

  redis:
    image: redis:latest
    ports:
      - "6379:6379"

  celery_worker:
    build: .
    command: celery -A config worker -l INFO
    volumes:
      - .:/app
    env_file:
      - .env
    depends_on:
      - redis
      - web

  celery_beat:
    build: .
    command: celery -A config beat -l INFO
    volumes:
      - .:/app
    env_file:
      - .env
    depends_on:
      - redis
      - web

  bot:
    build: .
    command: python manage.py run_bot
    volumes:
      - .:/app
    env_file:
      - .env
    depends_on:
      - web
      - redis
      - celery_worker
      - celery_beat

volumes:
  postgres_data:
  static_volume:
  media_volume:
